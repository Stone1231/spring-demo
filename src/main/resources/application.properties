queue.threads = 5
system.env = dev

#mqtt
mqtt.enable = false
mqtt.host=tcp://127.0.0.1:1883
mqtt.userName=userNn
mqtt.password=pwd
mqtt.threads=50
mqtt.cleanStart = true
mqtt.reconnectionAttemptMax = 6
mqtt.reconnectionDelay = 2000
mqtt.keepAlive = 30
mqtt.sendBufferSize = 2
mqtt.broadcast.clientId = client-chat-broadcast-localhost
mqtt.message.clientId = client-chat-message-localhost
mqtt.qos=2
mqtt.cleanSession=false

#rabbit
rabbit.host=127.0.0.1
rabbit.port=5672
rabbit.virtual.host=/
rabbit.username=userNn
rabbit.password=pwd
rabbit.queueName=sso-chat
rabbit.exchangeName=sso-type
rabbit.routingKey=chat.sso.1
rabbit.enable=true
#rabbitService
rabbitService.send.queue.listenMills=100
rabbitService.send.queue.enabled=false
rabbitService.send.queue.size=1

#mongo
mongo.enable = false
mongo.version=1
mongo.databasename=msgDB
mongo.connentstring=mongodb://user:pwd@127.0.0.1:28017/msgDB
#mongo table name
mongo.msg=msg
mongo.other1=other1
mongo.other2=other2
#spring mongo
#spring.data.mongodb.host=127.0.0.1
#spring.data.mongodb.port=27017

#kafka
kafka.enable = true
kafka.broker.list=127.0.0.1:9092,127.0.0.1:9092,127.0.0.1:9092
kafka.zookeeper=127.0.0.1:2181,127.0.0.1:2181,127.0.0.1:2181
kafka.groupId=msg_group
#queue name
queue.kafka.topic.message=MESSAGE_QUEUE
queue.kafka.topic.other=OTHER_QUEUE

##### Database Setting ##### 
db.maxDataSourceSize=2
#mysql
	#### db_1 write ####
db.1.writeDriverClass=com.mysql.jdbc.Driver
db.1.writeJdbcUrl=jdbc:mysql://127.0.0.1:3306/test1?useUnicode=yes&characterEncoding=UTF-8
db.1.writeUser=userNn
db.1.writePassword=pwd

	#### db_1 read ####
db.1.readDriverClass=com.mysql.jdbc.Driver
db.1.readJdbcUrl=jdbc:mysql://127.0.0.1:3306/test1?useUnicode=yes&characterEncoding=UTF-8
db.1.readUser=userNn
db.1.readPassword=pwd

	#### db_2 write ####
db.2.writeDriverClass=com.mysql.jdbc.Driver
db.2.writeJdbcUrl=jdbc:mysql://127.0.0.1:3306/test2?useUnicode=yes&characterEncoding=UTF-8
db.2.writeUser=userNn
db.2.writePassword=pwd

	#### db_2 read ####
db.2.readDriverClass=com.mysql.jdbc.Driver
db.2.readJdbcUrl=jdbc:mysql://127.0.0.1:3306/test2?useUnicode=yes&characterEncoding=UTF-8
db.2.readUser=userNn
db.2.readPassword=pwd

#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?autoReconnect=true&useSSL=false
#spring.datasource.username=userNn
#spring.datasource.password=pwd
# H2 in local file system allowing other simultaneous connections
#spring.datasource.url=jdbc:h2:~/test;AUTO_SERVER=TRUE


#redis
redis.global.sentienl1.ip=127.0.0.1
redis.global.sentienl1.port=26379
redis.global.sentienl2.ip=127.0.0.1
redis.global.sentienl2.port=26379
redis.global.sentienl3.ip=127.0.0.1
redis.global.sentienl3.port=26379
redis.global.sentienl.password=pwd

#redisson
redisson.cluster.enable=false
redisson.slaveReadOnly=true
redisson.clusters=redis://127.0.0.1:6379,redis://127.0.0.1:6379
redisson.sentinels=redis://127.0.0.1:26379,redis://127.0.0.1:26379,redis://127.0.0.1:26379
redisson.sentinel.masterName=mymaster
redisson.db=59
redisson.sentinel.password=pwd

redisson.cluster1=redis://127.0.0.1:6379
redisson.cluster2=redis://127.0.0.1:6379

redisson.sentinel1=redis://127.0.0.1:26379
redisson.sentinel2=redis://127.0.0.1:26379
redisson.sentinel3=redis://127.0.0.1:26379

redis.mode=2

#checkRedisConnectService
checkRedisConnectService.pingRedisInterval=180000


#proxy setting
# http.proxy.enabled is 'true' only in developer
# http.proxy.enabled is 'false' in product
http.proxy.enabled=true 
http.proxy.host=localhost
http.proxy.port=3128
